  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  â†³ /Users/jamesaspinall/.rvm/rubies/ruby-2.6.2/lib/ruby/gems/2.6.0/gems/rake-12.3.2/lib/rake/task.rb:273
  [1m[35m (2.0ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" varchar NOT NULL PRIMARY KEY)[0m
  â†³ /Users/jamesaspinall/.rvm/rubies/ruby-2.6.2/lib/ruby/gems/2.6.0/gems/rake-12.3.2/lib/rake/task.rb:273
  [1m[35m (3.3ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" varchar NOT NULL PRIMARY KEY, "value" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  â†³ /Users/jamesaspinall/.rvm/rubies/ruby-2.6.2/lib/ruby/gems/2.6.0/gems/rake-12.3.2/lib/rake/task.rb:273
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Users/jamesaspinall/.rvm/rubies/ruby-2.6.2/lib/ruby/gems/2.6.0/gems/rake-12.3.2/lib/rake/task.rb:273
Migrating to CreateUsers (20190531014003)
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ /Users/jamesaspinall/.rvm/rubies/ruby-2.6.2/lib/ruby/gems/2.6.0/gems/rake-12.3.2/lib/rake/task.rb:273
  [1m[35m (1.9ms)[0m  [1m[35mCREATE TABLE "users" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "email" varchar, "name" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  â†³ db/migrate/20190531014003_create_users.rb:3
  [1m[36mActiveRecord::SchemaMigration Create (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20190531014003"]]
  â†³ /Users/jamesaspinall/.rvm/rubies/ruby-2.6.2/lib/ruby/gems/2.6.0/gems/rake-12.3.2/lib/rake/task.rb:273
  [1m[35m (2.1ms)[0m  [1m[36mcommit transaction[0m
  â†³ /Users/jamesaspinall/.rvm/rubies/ruby-2.6.2/lib/ruby/gems/2.6.0/gems/rake-12.3.2/lib/rake/task.rb:273
Migrating to CreateBooks (20190531014034)
  [1m[35m (0.5ms)[0m  [1m[36mbegin transaction[0m
  â†³ /Users/jamesaspinall/.rvm/rubies/ruby-2.6.2/lib/ruby/gems/2.6.0/gems/rake-12.3.2/lib/rake/task.rb:273
  [1m[35m (1.9ms)[0m  [1m[35mCREATE TABLE "books" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "user_id" integer, "title" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL, CONSTRAINT "fk_rails_bc582ddd02"
FOREIGN KEY ("user_id")
  REFERENCES "users" ("id")
)[0m
  â†³ db/migrate/20190531014034_create_books.rb:3
  [1m[35m (0.3ms)[0m  [1m[35mCREATE  INDEX "index_books_on_user_id" ON "books" ("user_id")[0m
  â†³ db/migrate/20190531014034_create_books.rb:3
  [1m[36mActiveRecord::SchemaMigration Create (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20190531014034"]]
  â†³ /Users/jamesaspinall/.rvm/rubies/ruby-2.6.2/lib/ruby/gems/2.6.0/gems/rake-12.3.2/lib/rake/task.rb:273
  [1m[35m (1.4ms)[0m  [1m[36mcommit transaction[0m
  â†³ /Users/jamesaspinall/.rvm/rubies/ruby-2.6.2/lib/ruby/gems/2.6.0/gems/rake-12.3.2/lib/rake/task.rb:273
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ /Users/jamesaspinall/.rvm/rubies/ruby-2.6.2/lib/ruby/gems/2.6.0/gems/rake-12.3.2/lib/rake/task.rb:273
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ /Users/jamesaspinall/.rvm/rubies/ruby-2.6.2/lib/ruby/gems/2.6.0/gems/rake-12.3.2/lib/rake/task.rb:273
  [1m[36mActiveRecord::InternalMetadata Create (0.7ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-05-31 01:40:52.258998"], ["updated_at", "2019-05-31 01:40:52.258998"]]
  â†³ /Users/jamesaspinall/.rvm/rubies/ruby-2.6.2/lib/ruby/gems/2.6.0/gems/rake-12.3.2/lib/rake/task.rb:273
  [1m[35m (2.3ms)[0m  [1m[36mcommit transaction[0m
  â†³ /Users/jamesaspinall/.rvm/rubies/ruby-2.6.2/lib/ruby/gems/2.6.0/gems/rake-12.3.2/lib/rake/task.rb:273
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Users/jamesaspinall/.rvm/rubies/ruby-2.6.2/lib/ruby/gems/2.6.0/gems/rake-12.3.2/lib/rake/task.rb:273
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Users/jamesaspinall/.rvm/rubies/ruby-2.6.2/lib/ruby/gems/2.6.0/gems/rake-12.3.2/lib/rake/task.rb:273
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
  â†³ db/seeds.rb:1
  [1m[36mBook Load (0.2ms)[0m  [1m[34mSELECT "books".* FROM "books"[0m
  â†³ db/seeds.rb:2
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:4
  [1m[36mUser Create (0.6ms)[0m  [1m[32mINSERT INTO "users" ("email", "name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["email", "elmira@hegmannkshlerin.name"], ["name", "Shannan Heidenreich"], ["created_at", "2019-05-31 01:50:01.653080"], ["updated_at", "2019-05-31 01:50:01.653080"]]
  â†³ db/seeds.rb:4
  [1m[35m (1.5ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:4
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:6
  [1m[36mBook Create (1.3ms)[0m  [1m[32mINSERT INTO "books" ("user_id", "title", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["user_id", 1], ["title", "Death Be Not Proud"], ["created_at", "2019-05-31 01:50:01.699551"], ["updated_at", "2019-05-31 01:50:01.699551"]]
  â†³ db/seeds.rb:6
  [1m[35m (1.6ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:6
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:6
  [1m[36mBook Create (0.8ms)[0m  [1m[32mINSERT INTO "books" ("user_id", "title", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["user_id", 1], ["title", "In Death Ground"], ["created_at", "2019-05-31 01:50:01.705819"], ["updated_at", "2019-05-31 01:50:01.705819"]]
  â†³ db/seeds.rb:6
  [1m[35m (1.4ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:6
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:6
  [1m[36mBook Create (0.7ms)[0m  [1m[32mINSERT INTO "books" ("user_id", "title", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["user_id", 1], ["title", "Carrion Comfort"], ["created_at", "2019-05-31 01:50:01.711155"], ["updated_at", "2019-05-31 01:50:01.711155"]]
  â†³ db/seeds.rb:6
  [1m[35m (1.3ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:6
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:6
  [1m[36mBook Create (0.6ms)[0m  [1m[32mINSERT INTO "books" ("user_id", "title", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["user_id", 1], ["title", "After Many a Summer Dies the Swan"], ["created_at", "2019-05-31 01:50:01.715236"], ["updated_at", "2019-05-31 01:50:01.715236"]]
  â†³ db/seeds.rb:6
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:6
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:6
  [1m[36mBook Create (0.5ms)[0m  [1m[32mINSERT INTO "books" ("user_id", "title", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["user_id", 1], ["title", "Shall not Perish"], ["created_at", "2019-05-31 01:50:01.718894"], ["updated_at", "2019-05-31 01:50:01.718894"]]
  â†³ db/seeds.rb:6
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:6
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:4
  [1m[36mUser Create (0.4ms)[0m  [1m[32mINSERT INTO "users" ("email", "name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["email", "myrnagulgowski@glover.co"], ["name", "Ms. Rubye Hand"], ["created_at", "2019-05-31 01:50:01.722867"], ["updated_at", "2019-05-31 01:50:01.722867"]]
  â†³ db/seeds.rb:4
  [1m[35m (1.2ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:4
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:6
  [1m[36mBook Create (0.5ms)[0m  [1m[32mINSERT INTO "books" ("user_id", "title", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["user_id", 2], ["title", "Infinite Jest"], ["created_at", "2019-05-31 01:50:01.727115"], ["updated_at", "2019-05-31 01:50:01.727115"]]
  â†³ db/seeds.rb:6
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:6
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:6
  [1m[36mBook Create (0.5ms)[0m  [1m[32mINSERT INTO "books" ("user_id", "title", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["user_id", 2], ["title", "The Heart Is a Lonely Hunter"], ["created_at", "2019-05-31 01:50:01.730622"], ["updated_at", "2019-05-31 01:50:01.730622"]]
  â†³ db/seeds.rb:6
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:6
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:6
  [1m[36mBook Create (0.5ms)[0m  [1m[32mINSERT INTO "books" ("user_id", "title", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["user_id", 2], ["title", "The Daffodil Sky"], ["created_at", "2019-05-31 01:50:01.733895"], ["updated_at", "2019-05-31 01:50:01.733895"]]
  â†³ db/seeds.rb:6
  [1m[35m (1.3ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:6
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:6
  [1m[36mBook Create (0.8ms)[0m  [1m[32mINSERT INTO "books" ("user_id", "title", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["user_id", 2], ["title", "The Little Foxes"], ["created_at", "2019-05-31 01:50:01.738579"], ["updated_at", "2019-05-31 01:50:01.738579"]]
  â†³ db/seeds.rb:6
  [1m[35m (1.6ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:6
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:6
  [1m[36mBook Create (0.7ms)[0m  [1m[32mINSERT INTO "books" ("user_id", "title", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["user_id", 2], ["title", "No Country for Old Men"], ["created_at", "2019-05-31 01:50:01.744208"], ["updated_at", "2019-05-31 01:50:01.744208"]]
  â†³ db/seeds.rb:6
  [1m[35m (1.3ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:6
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:4
  [1m[36mUser Create (0.6ms)[0m  [1m[32mINSERT INTO "users" ("email", "name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["email", "rudy@goyette.co"], ["name", "Arlen Kuhn"], ["created_at", "2019-05-31 01:50:01.748766"], ["updated_at", "2019-05-31 01:50:01.748766"]]
  â†³ db/seeds.rb:4
  [1m[35m (1.0ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:4
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:6
  [1m[36mBook Create (0.5ms)[0m  [1m[32mINSERT INTO "books" ("user_id", "title", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["user_id", 3], ["title", "The Road Less Traveled"], ["created_at", "2019-05-31 01:50:01.753244"], ["updated_at", "2019-05-31 01:50:01.753244"]]
  â†³ db/seeds.rb:6
  [1m[35m (1.4ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:6
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:6
  [1m[36mBook Create (0.8ms)[0m  [1m[32mINSERT INTO "books" ("user_id", "title", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["user_id", 3], ["title", "The Golden Bowl"], ["created_at", "2019-05-31 01:50:01.758736"], ["updated_at", "2019-05-31 01:50:01.758736"]]
  â†³ db/seeds.rb:6
  [1m[35m (1.2ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:6
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:6
  [1m[36mBook Create (1.3ms)[0m  [1m[32mINSERT INTO "books" ("user_id", "title", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["user_id", 3], ["title", "Great Work of Time"], ["created_at", "2019-05-31 01:50:01.765101"], ["updated_at", "2019-05-31 01:50:01.765101"]]
  â†³ db/seeds.rb:6
  [1m[35m (1.6ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:6
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:6
  [1m[36mBook Create (0.6ms)[0m  [1m[32mINSERT INTO "books" ("user_id", "title", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["user_id", 3], ["title", "I Sing the Body Electric"], ["created_at", "2019-05-31 01:50:01.773501"], ["updated_at", "2019-05-31 01:50:01.773501"]]
  â†³ db/seeds.rb:6
  [1m[35m (1.3ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:6
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:6
  [1m[36mBook Create (0.9ms)[0m  [1m[32mINSERT INTO "books" ("user_id", "title", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["user_id", 3], ["title", "To Your Scattered Bodies Go"], ["created_at", "2019-05-31 01:50:01.779773"], ["updated_at", "2019-05-31 01:50:01.779773"]]
  â†³ db/seeds.rb:6
  [1m[35m (1.6ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:6
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:4
  [1m[36mUser Create (0.5ms)[0m  [1m[32mINSERT INTO "users" ("email", "name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["email", "galen@corwingoodwin.info"], ["name", "Domitila Barrows III"], ["created_at", "2019-05-31 01:50:01.786578"], ["updated_at", "2019-05-31 01:50:01.786578"]]
  â†³ db/seeds.rb:4
  [1m[35m (1.4ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:4
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:6
  [1m[36mBook Create (0.7ms)[0m  [1m[32mINSERT INTO "books" ("user_id", "title", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["user_id", 4], ["title", "What's Become of Waring"], ["created_at", "2019-05-31 01:50:01.792311"], ["updated_at", "2019-05-31 01:50:01.792311"]]
  â†³ db/seeds.rb:6
  [1m[35m (1.0ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:6
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:6
  [1m[36mBook Create (0.6ms)[0m  [1m[32mINSERT INTO "books" ("user_id", "title", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["user_id", 4], ["title", "It's a Battlefield"], ["created_at", "2019-05-31 01:50:01.797519"], ["updated_at", "2019-05-31 01:50:01.797519"]]
  â†³ db/seeds.rb:6
  [1m[35m (1.4ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:6
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:6
  [1m[36mBook Create (0.4ms)[0m  [1m[32mINSERT INTO "books" ("user_id", "title", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["user_id", 4], ["title", "A Glass of Blessings"], ["created_at", "2019-05-31 01:50:01.802961"], ["updated_at", "2019-05-31 01:50:01.802961"]]
  â†³ db/seeds.rb:6
  [1m[35m (1.4ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:6
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:6
  [1m[36mBook Create (0.5ms)[0m  [1m[32mINSERT INTO "books" ("user_id", "title", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["user_id", 4], ["title", "The Cricket on the Hearth"], ["created_at", "2019-05-31 01:50:01.808338"], ["updated_at", "2019-05-31 01:50:01.808338"]]
  â†³ db/seeds.rb:6
  [1m[35m (1.3ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:6
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:6
  [1m[36mBook Create (0.4ms)[0m  [1m[32mINSERT INTO "books" ("user_id", "title", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["user_id", 4], ["title", "Cabbages and Kings"], ["created_at", "2019-05-31 01:50:01.813323"], ["updated_at", "2019-05-31 01:50:01.813323"]]
  â†³ db/seeds.rb:6
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:6
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:4
  [1m[36mUser Create (0.5ms)[0m  [1m[32mINSERT INTO "users" ("email", "name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["email", "aron@klocko.com"], ["name", "Fredric Sauer"], ["created_at", "2019-05-31 01:50:01.818390"], ["updated_at", "2019-05-31 01:50:01.818390"]]
  â†³ db/seeds.rb:4
  [1m[35m (1.3ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:4
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:6
  [1m[36mBook Create (0.5ms)[0m  [1m[32mINSERT INTO "books" ("user_id", "title", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["user_id", 5], ["title", "The Wind's Twelve Quarters"], ["created_at", "2019-05-31 01:50:01.823721"], ["updated_at", "2019-05-31 01:50:01.823721"]]
  â†³ db/seeds.rb:6
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:6
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:6
  [1m[36mBook Create (0.5ms)[0m  [1m[32mINSERT INTO "books" ("user_id", "title", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["user_id", 5], ["title", "Sleep the Brave"], ["created_at", "2019-05-31 01:50:01.828435"], ["updated_at", "2019-05-31 01:50:01.828435"]]
  â†³ db/seeds.rb:6
  [1m[35m (1.6ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:6
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:6
  [1m[36mBook Create (0.5ms)[0m  [1m[32mINSERT INTO "books" ("user_id", "title", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["user_id", 5], ["title", "What's Become of Waring"], ["created_at", "2019-05-31 01:50:01.834312"], ["updated_at", "2019-05-31 01:50:01.834312"]]
  â†³ db/seeds.rb:6
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:6
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:6
  [1m[36mBook Create (0.5ms)[0m  [1m[32mINSERT INTO "books" ("user_id", "title", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["user_id", 5], ["title", "O Jerusalem!"], ["created_at", "2019-05-31 01:50:01.839255"], ["updated_at", "2019-05-31 01:50:01.839255"]]
  â†³ db/seeds.rb:6
  [1m[35m (1.3ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:6
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:6
  [1m[36mBook Create (0.5ms)[0m  [1m[32mINSERT INTO "books" ("user_id", "title", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["user_id", 5], ["title", "This Side of Paradise"], ["created_at", "2019-05-31 01:50:01.845082"], ["updated_at", "2019-05-31 01:50:01.845082"]]
  â†³ db/seeds.rb:6
  [1m[35m (1.2ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:6
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Users/jamesaspinall/.rvm/rubies/ruby-2.6.2/lib/ruby/gems/2.6.0/gems/rake-12.3.2/lib/rake/task.rb:273
  [1m[36mBook Load (0.3ms)[0m  [1m[34mSELECT "books".* FROM "books"[0m
  â†³ db/seeds.rb:1
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:1
  [1m[36mBook Destroy (0.6ms)[0m  [1m[31mDELETE FROM "books" WHERE "books"."id" = ?[0m  [["id", 1]]
  â†³ db/seeds.rb:1
  [1m[35m (1.4ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:1
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:1
  [1m[36mBook Destroy (0.4ms)[0m  [1m[31mDELETE FROM "books" WHERE "books"."id" = ?[0m  [["id", 2]]
  â†³ db/seeds.rb:1
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:1
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:1
  [1m[36mBook Destroy (0.4ms)[0m  [1m[31mDELETE FROM "books" WHERE "books"."id" = ?[0m  [["id", 3]]
  â†³ db/seeds.rb:1
  [1m[35m (1.2ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:1
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:1
  [1m[36mBook Destroy (0.7ms)[0m  [1m[31mDELETE FROM "books" WHERE "books"."id" = ?[0m  [["id", 4]]
  â†³ db/seeds.rb:1
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:1
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:1
  [1m[36mBook Destroy (0.4ms)[0m  [1m[31mDELETE FROM "books" WHERE "books"."id" = ?[0m  [["id", 5]]
  â†³ db/seeds.rb:1
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:1
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:1
  [1m[36mBook Destroy (0.4ms)[0m  [1m[31mDELETE FROM "books" WHERE "books"."id" = ?[0m  [["id", 6]]
  â†³ db/seeds.rb:1
  [1m[35m (1.3ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:1
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:1
  [1m[36mBook Destroy (0.4ms)[0m  [1m[31mDELETE FROM "books" WHERE "books"."id" = ?[0m  [["id", 7]]
  â†³ db/seeds.rb:1
  [1m[35m (1.2ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:1
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:1
  [1m[36mBook Destroy (0.4ms)[0m  [1m[31mDELETE FROM "books" WHERE "books"."id" = ?[0m  [["id", 8]]
  â†³ db/seeds.rb:1
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:1
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:1
  [1m[36mBook Destroy (0.4ms)[0m  [1m[31mDELETE FROM "books" WHERE "books"."id" = ?[0m  [["id", 9]]
  â†³ db/seeds.rb:1
  [1m[35m (1.2ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:1
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:1
  [1m[36mBook Destroy (0.4ms)[0m  [1m[31mDELETE FROM "books" WHERE "books"."id" = ?[0m  [["id", 10]]
  â†³ db/seeds.rb:1
  [1m[35m (1.4ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:1
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:1
  [1m[36mBook Destroy (0.4ms)[0m  [1m[31mDELETE FROM "books" WHERE "books"."id" = ?[0m  [["id", 11]]
  â†³ db/seeds.rb:1
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:1
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:1
  [1m[36mBook Destroy (0.4ms)[0m  [1m[31mDELETE FROM "books" WHERE "books"."id" = ?[0m  [["id", 12]]
  â†³ db/seeds.rb:1
  [1m[35m (1.0ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:1
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:1
  [1m[36mBook Destroy (0.4ms)[0m  [1m[31mDELETE FROM "books" WHERE "books"."id" = ?[0m  [["id", 13]]
  â†³ db/seeds.rb:1
  [1m[35m (1.3ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:1
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:1
  [1m[36mBook Destroy (0.4ms)[0m  [1m[31mDELETE FROM "books" WHERE "books"."id" = ?[0m  [["id", 14]]
  â†³ db/seeds.rb:1
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:1
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:1
  [1m[36mBook Destroy (0.4ms)[0m  [1m[31mDELETE FROM "books" WHERE "books"."id" = ?[0m  [["id", 15]]
  â†³ db/seeds.rb:1
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:1
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:1
  [1m[36mBook Destroy (0.4ms)[0m  [1m[31mDELETE FROM "books" WHERE "books"."id" = ?[0m  [["id", 16]]
  â†³ db/seeds.rb:1
  [1m[35m (1.3ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:1
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:1
  [1m[36mBook Destroy (0.4ms)[0m  [1m[31mDELETE FROM "books" WHERE "books"."id" = ?[0m  [["id", 17]]
  â†³ db/seeds.rb:1
  [1m[35m (1.0ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:1
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:1
  [1m[36mBook Destroy (0.4ms)[0m  [1m[31mDELETE FROM "books" WHERE "books"."id" = ?[0m  [["id", 18]]
  â†³ db/seeds.rb:1
  [1m[35m (1.4ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:1
  [1m[35m (1.5ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:1
  [1m[36mBook Destroy (0.9ms)[0m  [1m[31mDELETE FROM "books" WHERE "books"."id" = ?[0m  [["id", 19]]
  â†³ db/seeds.rb:1
  [1m[35m (1.3ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:1
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:1
  [1m[36mBook Destroy (0.7ms)[0m  [1m[31mDELETE FROM "books" WHERE "books"."id" = ?[0m  [["id", 20]]
  â†³ db/seeds.rb:1
  [1m[35m (1.4ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:1
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:1
  [1m[36mBook Destroy (0.7ms)[0m  [1m[31mDELETE FROM "books" WHERE "books"."id" = ?[0m  [["id", 21]]
  â†³ db/seeds.rb:1
  [1m[35m (1.5ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:1
  [1m[35m (0.3ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:1
  [1m[36mBook Destroy (0.7ms)[0m  [1m[31mDELETE FROM "books" WHERE "books"."id" = ?[0m  [["id", 22]]
  â†³ db/seeds.rb:1
  [1m[35m (1.3ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:1
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:1
  [1m[36mBook Destroy (0.7ms)[0m  [1m[31mDELETE FROM "books" WHERE "books"."id" = ?[0m  [["id", 23]]
  â†³ db/seeds.rb:1
  [1m[35m (1.4ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:1
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:1
  [1m[36mBook Destroy (0.9ms)[0m  [1m[31mDELETE FROM "books" WHERE "books"."id" = ?[0m  [["id", 24]]
  â†³ db/seeds.rb:1
  [1m[35m (1.4ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:1
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:1
  [1m[36mBook Destroy (0.6ms)[0m  [1m[31mDELETE FROM "books" WHERE "books"."id" = ?[0m  [["id", 25]]
  â†³ db/seeds.rb:1
  [1m[35m (1.3ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:1
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
  â†³ db/seeds.rb:2
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:2
  [1m[36mUser Destroy (0.7ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 1]]
  â†³ db/seeds.rb:2
  [1m[35m (1.3ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:2
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:2
  [1m[36mUser Destroy (0.7ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 2]]
  â†³ db/seeds.rb:2
  [1m[35m (1.2ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:2
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:2
  [1m[36mUser Destroy (0.6ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 3]]
  â†³ db/seeds.rb:2
  [1m[35m (1.4ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:2
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:2
  [1m[36mUser Destroy (0.9ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 4]]
  â†³ db/seeds.rb:2
  [1m[35m (1.5ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:2
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:2
  [1m[36mUser Destroy (0.5ms)[0m  [1m[31mDELETE FROM "users" WHERE "users"."id" = ?[0m  [["id", 5]]
  â†³ db/seeds.rb:2
  [1m[35m (1.2ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:2
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:5
  [1m[36mUser Create (0.8ms)[0m  [1m[32mINSERT INTO "users" ("email", "name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["email", "marvel@walker.co"], ["name", "Dominique Smitham Sr."], ["created_at", "2019-05-31 02:02:13.137267"], ["updated_at", "2019-05-31 02:02:13.137267"]]
  â†³ db/seeds.rb:5
  [1m[35m (1.4ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:5
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:7
  [1m[36mBook Create (0.5ms)[0m  [1m[32mINSERT INTO "books" ("user_id", "title", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["user_id", 6], ["title", "Jacob Have I Loved"], ["created_at", "2019-05-31 02:02:13.177760"], ["updated_at", "2019-05-31 02:02:13.177760"]]
  â†³ db/seeds.rb:7
  [1m[35m (1.3ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:7
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:7
  [1m[36mBook Create (0.5ms)[0m  [1m[32mINSERT INTO "books" ("user_id", "title", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["user_id", 6], ["title", "The Grapes of Wrath"], ["created_at", "2019-05-31 02:02:13.192963"], ["updated_at", "2019-05-31 02:02:13.192963"]]
  â†³ db/seeds.rb:7
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:7
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:7
  [1m[36mBook Create (0.4ms)[0m  [1m[32mINSERT INTO "books" ("user_id", "title", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["user_id", 6], ["title", "Recalled to Life"], ["created_at", "2019-05-31 02:02:13.197946"], ["updated_at", "2019-05-31 02:02:13.197946"]]
  â†³ db/seeds.rb:7
  [1m[35m (1.2ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:7
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:7
  [1m[36mBook Create (0.4ms)[0m  [1m[32mINSERT INTO "books" ("user_id", "title", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["user_id", 6], ["title", "The Painted Veil"], ["created_at", "2019-05-31 02:02:13.201376"], ["updated_at", "2019-05-31 02:02:13.201376"]]
  â†³ db/seeds.rb:7
  [1m[35m (1.0ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:7
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:7
  [1m[36mBook Create (0.6ms)[0m  [1m[32mINSERT INTO "books" ("user_id", "title", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["user_id", 6], ["title", "The Moon by Night"], ["created_at", "2019-05-31 02:02:13.204621"], ["updated_at", "2019-05-31 02:02:13.204621"]]
  â†³ db/seeds.rb:7
  [1m[35m (1.3ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:7
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:5
  [1m[36mUser Create (0.4ms)[0m  [1m[32mINSERT INTO "users" ("email", "name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["email", "alden@littelhaag.org"], ["name", "Ethan Cummerata"], ["created_at", "2019-05-31 02:02:13.209199"], ["updated_at", "2019-05-31 02:02:13.209199"]]
  â†³ db/seeds.rb:5
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:5
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:7
  [1m[36mBook Create (0.4ms)[0m  [1m[32mINSERT INTO "books" ("user_id", "title", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["user_id", 7], ["title", "Recalled to Life"], ["created_at", "2019-05-31 02:02:13.214430"], ["updated_at", "2019-05-31 02:02:13.214430"]]
  â†³ db/seeds.rb:7
  [1m[35m (1.3ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:7
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:7
  [1m[36mBook Create (0.5ms)[0m  [1m[32mINSERT INTO "books" ("user_id", "title", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["user_id", 7], ["title", "Recalled to Life"], ["created_at", "2019-05-31 02:02:13.219588"], ["updated_at", "2019-05-31 02:02:13.219588"]]
  â†³ db/seeds.rb:7
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:7
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:7
  [1m[36mBook Create (0.5ms)[0m  [1m[32mINSERT INTO "books" ("user_id", "title", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["user_id", 7], ["title", "I Know Why the Caged Bird Sings"], ["created_at", "2019-05-31 02:02:13.224522"], ["updated_at", "2019-05-31 02:02:13.224522"]]
  â†³ db/seeds.rb:7
  [1m[35m (1.4ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:7
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:7
  [1m[36mBook Create (0.4ms)[0m  [1m[32mINSERT INTO "books" ("user_id", "title", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["user_id", 7], ["title", "Number the Stars"], ["created_at", "2019-05-31 02:02:13.230109"], ["updated_at", "2019-05-31 02:02:13.230109"]]
  â†³ db/seeds.rb:7
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:7
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:7
  [1m[36mBook Create (0.5ms)[0m  [1m[32mINSERT INTO "books" ("user_id", "title", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["user_id", 7], ["title", "The Little Foxes"], ["created_at", "2019-05-31 02:02:13.234763"], ["updated_at", "2019-05-31 02:02:13.234763"]]
  â†³ db/seeds.rb:7
  [1m[35m (1.5ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:7
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:5
  [1m[36mUser Create (0.4ms)[0m  [1m[32mINSERT INTO "users" ("email", "name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["email", "demetriusdicki@muller.com"], ["name", "Allie Steuber"], ["created_at", "2019-05-31 02:02:13.240495"], ["updated_at", "2019-05-31 02:02:13.240495"]]
  â†³ db/seeds.rb:5
  [1m[35m (1.2ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:5
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:7
  [1m[36mBook Create (0.4ms)[0m  [1m[32mINSERT INTO "books" ("user_id", "title", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["user_id", 8], ["title", "The Monkey's Raincoat"], ["created_at", "2019-05-31 02:02:13.245394"], ["updated_at", "2019-05-31 02:02:13.245394"]]
  â†³ db/seeds.rb:7
  [1m[35m (1.3ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:7
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:7
  [1m[36mBook Create (0.5ms)[0m  [1m[32mINSERT INTO "books" ("user_id", "title", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["user_id", 8], ["title", "Consider Phlebas"], ["created_at", "2019-05-31 02:02:13.250581"], ["updated_at", "2019-05-31 02:02:13.250581"]]
  â†³ db/seeds.rb:7
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:7
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:7
  [1m[36mBook Create (0.4ms)[0m  [1m[32mINSERT INTO "books" ("user_id", "title", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["user_id", 8], ["title", "A Farewell to Arms"], ["created_at", "2019-05-31 02:02:13.255269"], ["updated_at", "2019-05-31 02:02:13.255269"]]
  â†³ db/seeds.rb:7
  [1m[35m (1.2ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:7
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:7
  [1m[36mBook Create (0.5ms)[0m  [1m[32mINSERT INTO "books" ("user_id", "title", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["user_id", 8], ["title", "Terrible Swift Sword"], ["created_at", "2019-05-31 02:02:13.260514"], ["updated_at", "2019-05-31 02:02:13.260514"]]
  â†³ db/seeds.rb:7
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:7
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:7
  [1m[36mBook Create (0.4ms)[0m  [1m[32mINSERT INTO "books" ("user_id", "title", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["user_id", 8], ["title", "Beneath the Bleeding"], ["created_at", "2019-05-31 02:02:13.265343"], ["updated_at", "2019-05-31 02:02:13.265343"]]
  â†³ db/seeds.rb:7
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:7
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:5
  [1m[36mUser Create (0.4ms)[0m  [1m[32mINSERT INTO "users" ("email", "name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["email", "israel@stroman.io"], ["name", "Felicita Olson"], ["created_at", "2019-05-31 02:02:13.270347"], ["updated_at", "2019-05-31 02:02:13.270347"]]
  â†³ db/seeds.rb:5
  [1m[35m (1.2ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:5
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:7
  [1m[36mBook Create (0.4ms)[0m  [1m[32mINSERT INTO "books" ("user_id", "title", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["user_id", 9], ["title", "For Whom the Bell Tolls"], ["created_at", "2019-05-31 02:02:13.275331"], ["updated_at", "2019-05-31 02:02:13.275331"]]
  â†³ db/seeds.rb:7
  [1m[35m (1.3ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:7
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:7
  [1m[36mBook Create (0.4ms)[0m  [1m[32mINSERT INTO "books" ("user_id", "title", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["user_id", 9], ["title", "The Golden Bowl"], ["created_at", "2019-05-31 02:02:13.280417"], ["updated_at", "2019-05-31 02:02:13.280417"]]
  â†³ db/seeds.rb:7
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:7
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:7
  [1m[36mBook Create (0.7ms)[0m  [1m[32mINSERT INTO "books" ("user_id", "title", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["user_id", 9], ["title", "Things Fall Apart"], ["created_at", "2019-05-31 02:02:13.285311"], ["updated_at", "2019-05-31 02:02:13.285311"]]
  â†³ db/seeds.rb:7
  [1m[35m (1.8ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:7
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:7
  [1m[36mBook Create (0.8ms)[0m  [1m[32mINSERT INTO "books" ("user_id", "title", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["user_id", 9], ["title", "Infinite Jest"], ["created_at", "2019-05-31 02:02:13.292573"], ["updated_at", "2019-05-31 02:02:13.292573"]]
  â†³ db/seeds.rb:7
  [1m[35m (1.9ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:7
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:7
  [1m[36mBook Create (0.6ms)[0m  [1m[32mINSERT INTO "books" ("user_id", "title", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["user_id", 9], ["title", "Beyond the Mexique Bay"], ["created_at", "2019-05-31 02:02:13.300316"], ["updated_at", "2019-05-31 02:02:13.300316"]]
  â†³ db/seeds.rb:7
  [1m[35m (1.0ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:7
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:5
  [1m[36mUser Create (0.9ms)[0m  [1m[32mINSERT INTO "users" ("email", "name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["email", "nathaniel@gorczanykaulke.org"], ["name", "Guadalupe Conn V"], ["created_at", "2019-05-31 02:02:13.306237"], ["updated_at", "2019-05-31 02:02:13.306237"]]
  â†³ db/seeds.rb:5
  [1m[35m (1.4ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:5
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:7
  [1m[36mBook Create (0.9ms)[0m  [1m[32mINSERT INTO "books" ("user_id", "title", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["user_id", 10], ["title", "Endless Night"], ["created_at", "2019-05-31 02:02:13.315641"], ["updated_at", "2019-05-31 02:02:13.315641"]]
  â†³ db/seeds.rb:7
  [1m[35m (2.0ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:7
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:7
  [1m[36mBook Create (0.8ms)[0m  [1m[32mINSERT INTO "books" ("user_id", "title", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["user_id", 10], ["title", "To Say Nothing of the Dog"], ["created_at", "2019-05-31 02:02:13.323855"], ["updated_at", "2019-05-31 02:02:13.323855"]]
  â†³ db/seeds.rb:7
  [1m[35m (1.4ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:7
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:7
  [1m[36mBook Create (0.6ms)[0m  [1m[32mINSERT INTO "books" ("user_id", "title", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["user_id", 10], ["title", "Moab Is My Washpot"], ["created_at", "2019-05-31 02:02:13.330399"], ["updated_at", "2019-05-31 02:02:13.330399"]]
  â†³ db/seeds.rb:7
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:7
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:7
  [1m[36mBook Create (0.5ms)[0m  [1m[32mINSERT INTO "books" ("user_id", "title", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["user_id", 10], ["title", "A Darkling Plain"], ["created_at", "2019-05-31 02:02:13.335543"], ["updated_at", "2019-05-31 02:02:13.335543"]]
  â†³ db/seeds.rb:7
  [1m[35m (1.3ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:7
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/seeds.rb:7
  [1m[36mBook Create (0.5ms)[0m  [1m[32mINSERT INTO "books" ("user_id", "title", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["user_id", 10], ["title", "Of Mice and Men"], ["created_at", "2019-05-31 02:02:13.340818"], ["updated_at", "2019-05-31 02:02:13.340818"]]
  â†³ db/seeds.rb:7
  [1m[35m (1.3ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/seeds.rb:7
Started GET "/" for ::1 at 2019-05-31 12:03:50 +1000
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/activerecord-5.2.3/lib/active_record/log_subscriber.rb:98
Processing by Rails::WelcomeController#index as HTML
  Rendering /Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/railties-5.2.3/lib/rails/templates/rails/welcome/index.html.erb
  Rendered /Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/railties-5.2.3/lib/rails/templates/rails/welcome/index.html.erb (8.5ms)
Completed 200 OK in 29ms (Views: 23.1ms | ActiveRecord: 0.0ms)


Started GET "/favicon.ico" for ::1 at 2019-05-31 12:03:51 +1000
  
ActionController::RoutingError (No route matches [GET] "/favicon.ico"):
  
actionpack (5.2.3) lib/action_dispatch/middleware/debug_exceptions.rb:65:in `call'
actionpack (5.2.3) lib/action_dispatch/middleware/show_exceptions.rb:33:in `call'
railties (5.2.3) lib/rails/rack/logger.rb:38:in `call_app'
railties (5.2.3) lib/rails/rack/logger.rb:26:in `block in call'
activesupport (5.2.3) lib/active_support/tagged_logging.rb:71:in `block in tagged'
activesupport (5.2.3) lib/active_support/tagged_logging.rb:28:in `tagged'
activesupport (5.2.3) lib/active_support/tagged_logging.rb:71:in `tagged'
railties (5.2.3) lib/rails/rack/logger.rb:26:in `call'
actionpack (5.2.3) lib/action_dispatch/middleware/remote_ip.rb:81:in `call'
actionpack (5.2.3) lib/action_dispatch/middleware/request_id.rb:27:in `call'
rack (2.0.7) lib/rack/runtime.rb:22:in `call'
activesupport (5.2.3) lib/active_support/cache/strategy/local_cache_middleware.rb:29:in `call'
actionpack (5.2.3) lib/action_dispatch/middleware/executor.rb:14:in `call'
actionpack (5.2.3) lib/action_dispatch/middleware/static.rb:127:in `call'
rack (2.0.7) lib/rack/sendfile.rb:111:in `call'
railties (5.2.3) lib/rails/engine.rb:524:in `call'
puma (3.12.1) lib/puma/configuration.rb:227:in `call'
puma (3.12.1) lib/puma/server.rb:660:in `handle_request'
puma (3.12.1) lib/puma/server.rb:474:in `process_client'
puma (3.12.1) lib/puma/server.rb:334:in `block in run'
puma (3.12.1) lib/puma/thread_pool.rb:135:in `block in spawn_thread'
Started GET "/graphiql" for ::1 at 2019-05-31 12:03:55 +1000
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"graphql#execute"}
  Rendering /Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/graphiql-rails-1.7.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/graphiql-rails-1.7.0/app/views/graphiql/rails/editors/show.html.erb (1072.0ms)
Completed 200 OK in 1076ms (Views: 1074.3ms | ActiveRecord: 0.0ms)


Started GET "/assets/graphiql/rails/application-8c170720948bf97b769a858441a0c5ef334be2b5edbfd069f6f0ed4bbc2206cc.css" for ::1 at 2019-05-31 12:03:56 +1000
Started GET "/assets/graphiql/rails/application-6f03c7a92432765b0fbe671bfb7a292ee6c37e6704b6e6ac95587e45676bbf72.js" for ::1 at 2019-05-31 12:03:56 +1000
Started POST "/graphql" for ::1 at 2019-05-31 12:03:57 +1000
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 200 OK in 308ms (Views: 45.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2019-05-31 12:07:45 +1000
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query{\n  testField\n}", "variables"=>nil, "graphql"=>{"query"=>"query{\n  testField\n}", "variables"=>nil}}
Completed 200 OK in 2ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2019-05-31 12:08:55 +1000
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query{\n  testField\n}", "variables"=>nil, "graphql"=>{"query"=>"query{\n  testField\n}", "variables"=>nil}}
Completed 200 OK in 2ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2019-05-31 12:09:36 +1000
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query{\n  __schema{\n    mutationType{\n      name{\n        \n      }\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query{\n  __schema{\n    mutationType{\n      name{\n        \n      }\n    }\n  }\n}", "variables"=>nil}}
Completed 200 OK in 1ms (Views: 0.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2019-05-31 12:09:57 +1000
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query{\n  testField\n}", "variables"=>nil, "graphql"=>{"query"=>"query{\n  testField\n}", "variables"=>nil}}
Completed 200 OK in 52ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for ::1 at 2019-05-31 12:13:17 +1000
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/activerecord-5.2.3/lib/active_record/log_subscriber.rb:98
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"graphql#execute"}
  Rendering /Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/graphiql-rails-1.7.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/graphiql-rails-1.7.0/app/views/graphiql/rails/editors/show.html.erb (277.7ms)
Completed 200 OK in 283ms (Views: 281.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2019-05-31 12:13:18 +1000
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 200 OK in 133ms (Views: 15.8ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for ::1 at 2019-05-31 12:13:33 +1000
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"graphql#execute"}
  Rendering /Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/graphiql-rails-1.7.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/graphiql-rails-1.7.0/app/views/graphiql/rails/editors/show.html.erb (6.6ms)
Completed 200 OK in 12ms (Views: 9.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2019-05-31 12:13:33 +1000
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 200 OK in 89ms (Views: 12.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2019-05-31 12:14:55 +1000
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 200 OK in 186ms (Views: 12.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2019-05-31 12:15:33 +1000
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query{\n  __schema{\n    types{\n      fields{\n        type{\n          fields{\n            name\n          }\n        }\n      }\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query{\n  __schema{\n    types{\n      fields{\n        type{\n          fields{\n            name\n          }\n        }\n      }\n    }\n  }\n}", "variables"=>nil}}
Completed 200 OK in 15ms (Views: 1.7ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for ::1 at 2019-05-31 12:21:14 +1000
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/activerecord-5.2.3/lib/active_record/log_subscriber.rb:98
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"graphql#execute"}
  Rendering /Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/graphiql-rails-1.7.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/graphiql-rails-1.7.0/app/views/graphiql/rails/editors/show.html.erb (297.5ms)
Completed 200 OK in 306ms (Views: 304.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2019-05-31 12:21:16 +1000
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 500 Internal Server Error in 6ms (ActiveRecord: 0.0ms)


  
SyntaxError (/Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/types/query_type.rb:20: syntax error, unexpected end, expecting end-of-input):
  
app/graphql/types/query_type.rb:20: syntax error, unexpected end, expecting end-of-input
app/graphql/graphql_rails_schema.rb:3:in `<class:GraphqlRailsSchema>'
app/graphql/graphql_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2019-05-31 12:21:17 +1000
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 3ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant Types::MutationType, expected /Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/types/mutation_type.rb to define it):
  
app/graphql/graphql_rails_schema.rb:2:in `<class:GraphqlRailsSchema>'
app/graphql/graphql_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2019-05-31 12:23:56 +1000
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"graphql#execute"}
  Rendering /Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/graphiql-rails-1.7.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/graphiql-rails-1.7.0/app/views/graphiql/rails/editors/show.html.erb (5.9ms)
Completed 200 OK in 10ms (Views: 9.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2019-05-31 12:23:56 +1000
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 500 Internal Server Error in 4ms (ActiveRecord: 0.0ms)


  
SyntaxError (/Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/types/mutation_type.rb:20: syntax error, unexpected end, expecting end-of-input):
  
app/graphql/types/mutation_type.rb:20: syntax error, unexpected end, expecting end-of-input
app/graphql/graphql_rails_schema.rb:2:in `<class:GraphqlRailsSchema>'
app/graphql/graphql_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2019-05-31 12:23:57 +1000
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 3ms (ActiveRecord: 0.0ms)


  
SyntaxError (/Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/types/mutation_type.rb:20: syntax error, unexpected end, expecting end-of-input):
  
app/graphql/types/mutation_type.rb:20: syntax error, unexpected end, expecting end-of-input
app/graphql/graphql_rails_schema.rb:2:in `<class:GraphqlRailsSchema>'
app/graphql/graphql_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2019-05-31 12:24:23 +1000
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"graphql#execute"}
  Rendering /Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/graphiql-rails-1.7.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/graphiql-rails-1.7.0/app/views/graphiql/rails/editors/show.html.erb (6.3ms)
Completed 200 OK in 12ms (Views: 10.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2019-05-31 12:24:24 +1000
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 500 Internal Server Error in 4ms (ActiveRecord: 0.0ms)


  
SyntaxError (/Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/types/mutation_type.rb:20: syntax error, unexpected end, expecting end-of-input):
  
app/graphql/types/mutation_type.rb:20: syntax error, unexpected end, expecting end-of-input
app/graphql/graphql_rails_schema.rb:2:in `<class:GraphqlRailsSchema>'
app/graphql/graphql_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2019-05-31 12:24:24 +1000
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 4ms (ActiveRecord: 0.0ms)


  
SyntaxError (/Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/types/mutation_type.rb:20: syntax error, unexpected end, expecting end-of-input):
  
app/graphql/types/mutation_type.rb:20: syntax error, unexpected end, expecting end-of-input
app/graphql/graphql_rails_schema.rb:2:in `<class:GraphqlRailsSchema>'
app/graphql/graphql_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2019-05-31 12:24:47 +1000
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"graphql#execute"}
  Rendering /Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/graphiql-rails-1.7.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/graphiql-rails-1.7.0/app/views/graphiql/rails/editors/show.html.erb (5.0ms)
Completed 200 OK in 10ms (Views: 8.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2019-05-31 12:24:48 +1000
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
uninitialized constant Types::UserType::Type
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:79:in `block in load_missing_constant'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:8:in `without_bootsnap_cache'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:79:in `rescue in load_missing_constant'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:58:in `load_missing_constant'
/Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/types/user_type.rb:6:in `<class:UserType>'
/Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/types/user_type.rb:2:in `<module:Types>'
/Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/types/user_type.rb:1:in `<main>'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:54:in `load'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:54:in `load'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/activesupport-5.2.3/lib/active_support/dependencies/interlock.rb:14:in `block in loading'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/activesupport-5.2.3/lib/active_support/concurrency/share_lock.rb:151:in `exclusive'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/activesupport-5.2.3/lib/active_support/dependencies/interlock.rb:13:in `loading'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:48:in `block in require_or_load'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:16:in `allow_bootsnap_retry'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:47:in `require_or_load'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:60:in `block in load_missing_constant'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:16:in `allow_bootsnap_retry'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:59:in `load_missing_constant'
/Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/types/mutation_type.rb:4:in `<class:MutationType>'
/Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/types/mutation_type.rb:2:in `<module:Types>'
/Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/types/mutation_type.rb:1:in `<main>'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:54:in `load'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:54:in `load'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/activesupport-5.2.3/lib/active_support/dependencies/interlock.rb:14:in `block in loading'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/activesupport-5.2.3/lib/active_support/concurrency/share_lock.rb:151:in `exclusive'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/activesupport-5.2.3/lib/active_support/dependencies/interlock.rb:13:in `loading'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:48:in `block in require_or_load'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:16:in `allow_bootsnap_retry'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:47:in `require_or_load'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:60:in `block in load_missing_constant'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:16:in `allow_bootsnap_retry'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:59:in `load_missing_constant'
/Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/graphql_rails_schema.rb:2:in `<class:GraphqlRailsSchema>'
/Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/graphql_rails_schema.rb:1:in `<main>'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:54:in `load'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:54:in `load'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/activesupport-5.2.3/lib/active_support/dependencies/interlock.rb:14:in `block in loading'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/activesupport-5.2.3/lib/active_support/concurrency/share_lock.rb:151:in `exclusive'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/activesupport-5.2.3/lib/active_support/dependencies/interlock.rb:13:in `loading'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:48:in `block in require_or_load'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:16:in `allow_bootsnap_retry'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:47:in `require_or_load'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:60:in `block in load_missing_constant'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:16:in `allow_bootsnap_retry'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:59:in `load_missing_constant'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:60:in `block in load_missing_constant'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:16:in `allow_bootsnap_retry'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:59:in `load_missing_constant'
/Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/controllers/graphql_controller.rb:10:in `execute'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/action_controller/metal/basic_implicit_render.rb:6:in `send_action'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/abstract_controller/base.rb:194:in `process_action'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/action_controller/metal/rendering.rb:30:in `process_action'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/abstract_controller/callbacks.rb:42:in `block in process_action'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/activesupport-5.2.3/lib/active_support/callbacks.rb:98:in `run_callbacks'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/abstract_controller/callbacks.rb:41:in `process_action'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/action_controller/metal/rescue.rb:22:in `process_action'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/action_controller/metal/instrumentation.rb:34:in `block in process_action'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/activesupport-5.2.3/lib/active_support/notifications.rb:168:in `block in instrument'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/activesupport-5.2.3/lib/active_support/notifications/instrumenter.rb:23:in `instrument'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/activesupport-5.2.3/lib/active_support/notifications.rb:168:in `instrument'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/action_controller/metal/instrumentation.rb:32:in `process_action'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/action_controller/metal/params_wrapper.rb:256:in `process_action'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/activerecord-5.2.3/lib/active_record/railties/controller_runtime.rb:24:in `process_action'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/abstract_controller/base.rb:134:in `process'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/action_controller/metal.rb:191:in `dispatch'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/action_controller/metal.rb:252:in `dispatch'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/action_dispatch/routing/route_set.rb:52:in `dispatch'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/action_dispatch/routing/route_set.rb:34:in `serve'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/action_dispatch/journey/router.rb:52:in `block in serve'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/action_dispatch/journey/router.rb:35:in `each'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/action_dispatch/journey/router.rb:35:in `serve'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/action_dispatch/routing/route_set.rb:840:in `call'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/rack-2.0.7/lib/rack/etag.rb:25:in `call'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/rack-2.0.7/lib/rack/conditional_get.rb:38:in `call'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/rack-2.0.7/lib/rack/head.rb:12:in `call'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/activerecord-5.2.3/lib/active_record/migration.rb:559:in `call'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/action_dispatch/middleware/callbacks.rb:28:in `block in call'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/activesupport-5.2.3/lib/active_support/callbacks.rb:98:in `run_callbacks'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/action_dispatch/middleware/callbacks.rb:26:in `call'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/action_dispatch/middleware/executor.rb:14:in `call'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/action_dispatch/middleware/debug_exceptions.rb:61:in `call'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/action_dispatch/middleware/show_exceptions.rb:33:in `call'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/railties-5.2.3/lib/rails/rack/logger.rb:38:in `call_app'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/railties-5.2.3/lib/rails/rack/logger.rb:26:in `block in call'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/activesupport-5.2.3/lib/active_support/tagged_logging.rb:71:in `block in tagged'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/activesupport-5.2.3/lib/active_support/tagged_logging.rb:28:in `tagged'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/activesupport-5.2.3/lib/active_support/tagged_logging.rb:71:in `tagged'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/railties-5.2.3/lib/rails/rack/logger.rb:26:in `call'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/action_dispatch/middleware/remote_ip.rb:81:in `call'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/action_dispatch/middleware/request_id.rb:27:in `call'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/rack-2.0.7/lib/rack/runtime.rb:22:in `call'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/activesupport-5.2.3/lib/active_support/cache/strategy/local_cache_middleware.rb:29:in `call'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/action_dispatch/middleware/executor.rb:14:in `call'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/action_dispatch/middleware/static.rb:127:in `call'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/rack-2.0.7/lib/rack/sendfile.rb:111:in `call'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/railties-5.2.3/lib/rails/engine.rb:524:in `call'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/puma-3.12.1/lib/puma/configuration.rb:227:in `call'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/puma-3.12.1/lib/puma/server.rb:660:in `handle_request'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/puma-3.12.1/lib/puma/server.rb:474:in `process_client'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/puma-3.12.1/lib/puma/server.rb:334:in `block in run'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/puma-3.12.1/lib/puma/thread_pool.rb:135:in `block in spawn_thread'
Completed 500 Internal Server Error in 28ms (Views: 2.6ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for ::1 at 2019-05-31 12:25:10 +1000
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"graphql#execute"}
  Rendering /Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/graphiql-rails-1.7.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/graphiql-rails-1.7.0/app/views/graphiql/rails/editors/show.html.erb (5.3ms)
Completed 200 OK in 8ms (Views: 7.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2019-05-31 12:25:10 +1000
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 500 Internal Server Error in 4ms (ActiveRecord: 0.0ms)


  
SyntaxError (/Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/types/query_type.rb:20: syntax error, unexpected end, expecting end-of-input):
  
app/graphql/types/query_type.rb:20: syntax error, unexpected end, expecting end-of-input
app/graphql/graphql_rails_schema.rb:3:in `<class:GraphqlRailsSchema>'
app/graphql/graphql_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2019-05-31 12:25:11 +1000
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 4ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant Types::MutationType, expected /Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/types/mutation_type.rb to define it):
  
app/graphql/graphql_rails_schema.rb:2:in `<class:GraphqlRailsSchema>'
app/graphql/graphql_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2019-05-31 12:25:23 +1000
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"graphql#execute"}
  Rendering /Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/graphiql-rails-1.7.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/graphiql-rails-1.7.0/app/views/graphiql/rails/editors/show.html.erb (4.4ms)
Completed 200 OK in 9ms (Views: 7.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2019-05-31 12:25:23 +1000
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 500 Internal Server Error in 6ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant Types::MutationType, expected /Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/types/mutation_type.rb to define it):
  
app/graphql/graphql_rails_schema.rb:2:in `<class:GraphqlRailsSchema>'
app/graphql/graphql_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2019-05-31 12:25:24 +1000
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant Types::MutationType, expected /Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/types/mutation_type.rb to define it):
  
app/graphql/graphql_rails_schema.rb:2:in `<class:GraphqlRailsSchema>'
app/graphql/graphql_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2019-05-31 12:26:10 +1000
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"graphql#execute"}
  Rendering /Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/graphiql-rails-1.7.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/graphiql-rails-1.7.0/app/views/graphiql/rails/editors/show.html.erb (4.3ms)
Completed 200 OK in 8ms (Views: 6.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2019-05-31 12:26:11 +1000
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 500 Internal Server Error in 8ms (ActiveRecord: 0.0ms)


  
SyntaxError (/Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/types/query_type.rb:20: syntax error, unexpected end, expecting end-of-input):
  
app/graphql/types/query_type.rb:20: syntax error, unexpected end, expecting end-of-input
app/graphql/graphql_rails_schema.rb:3:in `<class:GraphqlRailsSchema>'
app/graphql/graphql_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2019-05-31 12:26:11 +1000
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 3ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant Types::MutationType, expected /Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/types/mutation_type.rb to define it):
  
app/graphql/graphql_rails_schema.rb:2:in `<class:GraphqlRailsSchema>'
app/graphql/graphql_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2019-05-31 12:26:22 +1000
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"graphql#execute"}
  Rendering /Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/graphiql-rails-1.7.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/graphiql-rails-1.7.0/app/views/graphiql/rails/editors/show.html.erb (6.7ms)
Completed 200 OK in 10ms (Views: 8.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2019-05-31 12:26:23 +1000
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 500 Internal Server Error in 4ms (ActiveRecord: 0.0ms)


  
SyntaxError (/Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/types/mutation_type.rb:18: syntax error, unexpected end, expecting end-of-input):
  
app/graphql/types/mutation_type.rb:18: syntax error, unexpected end, expecting end-of-input
app/graphql/graphql_rails_schema.rb:2:in `<class:GraphqlRailsSchema>'
app/graphql/graphql_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2019-05-31 12:26:23 +1000
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 4ms (ActiveRecord: 0.0ms)


  
SyntaxError (/Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/types/mutation_type.rb:18: syntax error, unexpected end, expecting end-of-input):
  
app/graphql/types/mutation_type.rb:18: syntax error, unexpected end, expecting end-of-input
app/graphql/graphql_rails_schema.rb:2:in `<class:GraphqlRailsSchema>'
app/graphql/graphql_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2019-05-31 12:26:26 +1000
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"graphql#execute"}
  Rendering /Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/graphiql-rails-1.7.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/graphiql-rails-1.7.0/app/views/graphiql/rails/editors/show.html.erb (5.1ms)
Completed 200 OK in 12ms (Views: 9.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2019-05-31 12:26:27 +1000
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 500 Internal Server Error in 3ms (ActiveRecord: 0.0ms)


  
SyntaxError (/Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/types/mutation_type.rb:18: syntax error, unexpected end, expecting end-of-input):
  
app/graphql/types/mutation_type.rb:18: syntax error, unexpected end, expecting end-of-input
app/graphql/graphql_rails_schema.rb:2:in `<class:GraphqlRailsSchema>'
app/graphql/graphql_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2019-05-31 12:26:27 +1000
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 3ms (ActiveRecord: 0.0ms)


  
SyntaxError (/Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/types/mutation_type.rb:18: syntax error, unexpected end, expecting end-of-input):
  
app/graphql/types/mutation_type.rb:18: syntax error, unexpected end, expecting end-of-input
app/graphql/graphql_rails_schema.rb:2:in `<class:GraphqlRailsSchema>'
app/graphql/graphql_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2019-05-31 12:26:41 +1000
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"graphql#execute"}
  Rendering /Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/graphiql-rails-1.7.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/graphiql-rails-1.7.0/app/views/graphiql/rails/editors/show.html.erb (3.8ms)
Completed 200 OK in 7ms (Views: 5.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2019-05-31 12:26:41 +1000
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
uninitialized constant Types::UserType::Type
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:79:in `block in load_missing_constant'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:8:in `without_bootsnap_cache'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:79:in `rescue in load_missing_constant'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:58:in `load_missing_constant'
/Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/types/user_type.rb:6:in `<class:UserType>'
/Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/types/user_type.rb:2:in `<module:Types>'
/Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/types/user_type.rb:1:in `<main>'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:54:in `load'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:54:in `load'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/activesupport-5.2.3/lib/active_support/dependencies/interlock.rb:14:in `block in loading'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/activesupport-5.2.3/lib/active_support/concurrency/share_lock.rb:151:in `exclusive'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/activesupport-5.2.3/lib/active_support/dependencies/interlock.rb:13:in `loading'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:48:in `block in require_or_load'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:16:in `allow_bootsnap_retry'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:47:in `require_or_load'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:60:in `block in load_missing_constant'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:16:in `allow_bootsnap_retry'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:59:in `load_missing_constant'
/Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/types/mutation_type.rb:3:in `<class:MutationType>'
/Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/types/mutation_type.rb:2:in `<module:Types>'
/Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/types/mutation_type.rb:1:in `<main>'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:54:in `load'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:54:in `load'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/activesupport-5.2.3/lib/active_support/dependencies/interlock.rb:14:in `block in loading'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/activesupport-5.2.3/lib/active_support/concurrency/share_lock.rb:151:in `exclusive'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/activesupport-5.2.3/lib/active_support/dependencies/interlock.rb:13:in `loading'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:48:in `block in require_or_load'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:16:in `allow_bootsnap_retry'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:47:in `require_or_load'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:60:in `block in load_missing_constant'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:16:in `allow_bootsnap_retry'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:59:in `load_missing_constant'
/Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/graphql_rails_schema.rb:2:in `<class:GraphqlRailsSchema>'
/Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/graphql_rails_schema.rb:1:in `<main>'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:54:in `load'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:54:in `load'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/activesupport-5.2.3/lib/active_support/dependencies/interlock.rb:14:in `block in loading'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/activesupport-5.2.3/lib/active_support/concurrency/share_lock.rb:151:in `exclusive'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/activesupport-5.2.3/lib/active_support/dependencies/interlock.rb:13:in `loading'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:48:in `block in require_or_load'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:16:in `allow_bootsnap_retry'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:47:in `require_or_load'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:60:in `block in load_missing_constant'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:16:in `allow_bootsnap_retry'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:59:in `load_missing_constant'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:60:in `block in load_missing_constant'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:16:in `allow_bootsnap_retry'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:59:in `load_missing_constant'
/Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/controllers/graphql_controller.rb:10:in `execute'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/action_controller/metal/basic_implicit_render.rb:6:in `send_action'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/abstract_controller/base.rb:194:in `process_action'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/action_controller/metal/rendering.rb:30:in `process_action'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/abstract_controller/callbacks.rb:42:in `block in process_action'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/activesupport-5.2.3/lib/active_support/callbacks.rb:98:in `run_callbacks'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/abstract_controller/callbacks.rb:41:in `process_action'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/action_controller/metal/rescue.rb:22:in `process_action'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/action_controller/metal/instrumentation.rb:34:in `block in process_action'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/activesupport-5.2.3/lib/active_support/notifications.rb:168:in `block in instrument'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/activesupport-5.2.3/lib/active_support/notifications/instrumenter.rb:23:in `instrument'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/activesupport-5.2.3/lib/active_support/notifications.rb:168:in `instrument'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/action_controller/metal/instrumentation.rb:32:in `process_action'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/action_controller/metal/params_wrapper.rb:256:in `process_action'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/activerecord-5.2.3/lib/active_record/railties/controller_runtime.rb:24:in `process_action'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/abstract_controller/base.rb:134:in `process'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/action_controller/metal.rb:191:in `dispatch'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/action_controller/metal.rb:252:in `dispatch'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/action_dispatch/routing/route_set.rb:52:in `dispatch'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/action_dispatch/routing/route_set.rb:34:in `serve'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/action_dispatch/journey/router.rb:52:in `block in serve'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/action_dispatch/journey/router.rb:35:in `each'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/action_dispatch/journey/router.rb:35:in `serve'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/action_dispatch/routing/route_set.rb:840:in `call'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/rack-2.0.7/lib/rack/etag.rb:25:in `call'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/rack-2.0.7/lib/rack/conditional_get.rb:38:in `call'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/rack-2.0.7/lib/rack/head.rb:12:in `call'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/activerecord-5.2.3/lib/active_record/migration.rb:559:in `call'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/action_dispatch/middleware/callbacks.rb:28:in `block in call'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/activesupport-5.2.3/lib/active_support/callbacks.rb:98:in `run_callbacks'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/action_dispatch/middleware/callbacks.rb:26:in `call'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/action_dispatch/middleware/executor.rb:14:in `call'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/action_dispatch/middleware/debug_exceptions.rb:61:in `call'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/action_dispatch/middleware/show_exceptions.rb:33:in `call'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/railties-5.2.3/lib/rails/rack/logger.rb:38:in `call_app'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/railties-5.2.3/lib/rails/rack/logger.rb:26:in `block in call'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/activesupport-5.2.3/lib/active_support/tagged_logging.rb:71:in `block in tagged'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/activesupport-5.2.3/lib/active_support/tagged_logging.rb:28:in `tagged'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/activesupport-5.2.3/lib/active_support/tagged_logging.rb:71:in `tagged'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/railties-5.2.3/lib/rails/rack/logger.rb:26:in `call'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/action_dispatch/middleware/remote_ip.rb:81:in `call'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/action_dispatch/middleware/request_id.rb:27:in `call'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/rack-2.0.7/lib/rack/runtime.rb:22:in `call'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/activesupport-5.2.3/lib/active_support/cache/strategy/local_cache_middleware.rb:29:in `call'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/action_dispatch/middleware/executor.rb:14:in `call'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/action_dispatch/middleware/static.rb:127:in `call'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/rack-2.0.7/lib/rack/sendfile.rb:111:in `call'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/railties-5.2.3/lib/rails/engine.rb:524:in `call'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/puma-3.12.1/lib/puma/configuration.rb:227:in `call'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/puma-3.12.1/lib/puma/server.rb:660:in `handle_request'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/puma-3.12.1/lib/puma/server.rb:474:in `process_client'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/puma-3.12.1/lib/puma/server.rb:334:in `block in run'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/puma-3.12.1/lib/puma/thread_pool.rb:135:in `block in spawn_thread'
Completed 500 Internal Server Error in 56ms (Views: 2.7ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for ::1 at 2019-05-31 12:27:14 +1000
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"graphql#execute"}
  Rendering /Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/graphiql-rails-1.7.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/graphiql-rails-1.7.0/app/views/graphiql/rails/editors/show.html.erb (3.5ms)
Completed 200 OK in 6ms (Views: 5.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2019-05-31 12:27:15 +1000
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
uninitialized constant Types::UserType::Type
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:79:in `block in load_missing_constant'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:8:in `without_bootsnap_cache'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:79:in `rescue in load_missing_constant'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:58:in `load_missing_constant'
/Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/types/user_type.rb:6:in `<class:UserType>'
/Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/types/user_type.rb:2:in `<module:Types>'
/Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/types/user_type.rb:1:in `<main>'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:54:in `load'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:54:in `load'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/activesupport-5.2.3/lib/active_support/dependencies/interlock.rb:14:in `block in loading'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/activesupport-5.2.3/lib/active_support/concurrency/share_lock.rb:151:in `exclusive'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/activesupport-5.2.3/lib/active_support/dependencies/interlock.rb:13:in `loading'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:48:in `block in require_or_load'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:16:in `allow_bootsnap_retry'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:47:in `require_or_load'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:60:in `block in load_missing_constant'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:16:in `allow_bootsnap_retry'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:59:in `load_missing_constant'
/Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/types/mutation_type.rb:3:in `<class:MutationType>'
/Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/types/mutation_type.rb:2:in `<module:Types>'
/Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/types/mutation_type.rb:1:in `<main>'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:54:in `load'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:54:in `load'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/activesupport-5.2.3/lib/active_support/dependencies/interlock.rb:14:in `block in loading'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/activesupport-5.2.3/lib/active_support/concurrency/share_lock.rb:151:in `exclusive'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/activesupport-5.2.3/lib/active_support/dependencies/interlock.rb:13:in `loading'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:48:in `block in require_or_load'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:16:in `allow_bootsnap_retry'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:47:in `require_or_load'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:60:in `block in load_missing_constant'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:16:in `allow_bootsnap_retry'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:59:in `load_missing_constant'
/Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/graphql_rails_schema.rb:2:in `<class:GraphqlRailsSchema>'
/Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/graphql_rails_schema.rb:1:in `<main>'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:54:in `load'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:54:in `load'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/activesupport-5.2.3/lib/active_support/dependencies/interlock.rb:14:in `block in loading'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/activesupport-5.2.3/lib/active_support/concurrency/share_lock.rb:151:in `exclusive'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/activesupport-5.2.3/lib/active_support/dependencies/interlock.rb:13:in `loading'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:48:in `block in require_or_load'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:16:in `allow_bootsnap_retry'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:47:in `require_or_load'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:60:in `block in load_missing_constant'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:16:in `allow_bootsnap_retry'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:59:in `load_missing_constant'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:60:in `block in load_missing_constant'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:16:in `allow_bootsnap_retry'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/bootsnap-1.4.4/lib/bootsnap/load_path_cache/core_ext/active_support.rb:59:in `load_missing_constant'
/Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/controllers/graphql_controller.rb:10:in `execute'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/action_controller/metal/basic_implicit_render.rb:6:in `send_action'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/abstract_controller/base.rb:194:in `process_action'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/action_controller/metal/rendering.rb:30:in `process_action'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/abstract_controller/callbacks.rb:42:in `block in process_action'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/activesupport-5.2.3/lib/active_support/callbacks.rb:98:in `run_callbacks'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/abstract_controller/callbacks.rb:41:in `process_action'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/action_controller/metal/rescue.rb:22:in `process_action'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/action_controller/metal/instrumentation.rb:34:in `block in process_action'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/activesupport-5.2.3/lib/active_support/notifications.rb:168:in `block in instrument'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/activesupport-5.2.3/lib/active_support/notifications/instrumenter.rb:23:in `instrument'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/activesupport-5.2.3/lib/active_support/notifications.rb:168:in `instrument'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/action_controller/metal/instrumentation.rb:32:in `process_action'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/action_controller/metal/params_wrapper.rb:256:in `process_action'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/activerecord-5.2.3/lib/active_record/railties/controller_runtime.rb:24:in `process_action'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/abstract_controller/base.rb:134:in `process'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/action_controller/metal.rb:191:in `dispatch'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/action_controller/metal.rb:252:in `dispatch'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/action_dispatch/routing/route_set.rb:52:in `dispatch'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/action_dispatch/routing/route_set.rb:34:in `serve'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/action_dispatch/journey/router.rb:52:in `block in serve'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/action_dispatch/journey/router.rb:35:in `each'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/action_dispatch/journey/router.rb:35:in `serve'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/action_dispatch/routing/route_set.rb:840:in `call'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/rack-2.0.7/lib/rack/etag.rb:25:in `call'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/rack-2.0.7/lib/rack/conditional_get.rb:38:in `call'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/rack-2.0.7/lib/rack/head.rb:12:in `call'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/activerecord-5.2.3/lib/active_record/migration.rb:559:in `call'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/action_dispatch/middleware/callbacks.rb:28:in `block in call'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/activesupport-5.2.3/lib/active_support/callbacks.rb:98:in `run_callbacks'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/action_dispatch/middleware/callbacks.rb:26:in `call'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/action_dispatch/middleware/executor.rb:14:in `call'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/action_dispatch/middleware/debug_exceptions.rb:61:in `call'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/action_dispatch/middleware/show_exceptions.rb:33:in `call'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/railties-5.2.3/lib/rails/rack/logger.rb:38:in `call_app'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/railties-5.2.3/lib/rails/rack/logger.rb:26:in `block in call'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/activesupport-5.2.3/lib/active_support/tagged_logging.rb:71:in `block in tagged'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/activesupport-5.2.3/lib/active_support/tagged_logging.rb:28:in `tagged'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/activesupport-5.2.3/lib/active_support/tagged_logging.rb:71:in `tagged'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/railties-5.2.3/lib/rails/rack/logger.rb:26:in `call'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/action_dispatch/middleware/remote_ip.rb:81:in `call'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/action_dispatch/middleware/request_id.rb:27:in `call'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/rack-2.0.7/lib/rack/runtime.rb:22:in `call'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/activesupport-5.2.3/lib/active_support/cache/strategy/local_cache_middleware.rb:29:in `call'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/action_dispatch/middleware/executor.rb:14:in `call'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/actionpack-5.2.3/lib/action_dispatch/middleware/static.rb:127:in `call'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/rack-2.0.7/lib/rack/sendfile.rb:111:in `call'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/railties-5.2.3/lib/rails/engine.rb:524:in `call'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/puma-3.12.1/lib/puma/configuration.rb:227:in `call'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/puma-3.12.1/lib/puma/server.rb:660:in `handle_request'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/puma-3.12.1/lib/puma/server.rb:474:in `process_client'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/puma-3.12.1/lib/puma/server.rb:334:in `block in run'
/Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/puma-3.12.1/lib/puma/thread_pool.rb:135:in `block in spawn_thread'
Completed 500 Internal Server Error in 38ms (Views: 2.6ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for ::1 at 2019-05-31 12:27:51 +1000
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"graphql#execute"}
  Rendering /Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/graphiql-rails-1.7.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/graphiql-rails-1.7.0/app/views/graphiql/rails/editors/show.html.erb (4.3ms)
Completed 200 OK in 9ms (Views: 6.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2019-05-31 12:27:52 +1000
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 500 Internal Server Error in 8ms (ActiveRecord: 0.0ms)


  
SyntaxError (/Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/types/query_type.rb:20: syntax error, unexpected end, expecting end-of-input):
  
app/graphql/types/query_type.rb:20: syntax error, unexpected end, expecting end-of-input
app/graphql/graphql_rails_schema.rb:3:in `<class:GraphqlRailsSchema>'
app/graphql/graphql_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2019-05-31 12:27:52 +1000
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant Types::MutationType, expected /Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/types/mutation_type.rb to define it):
  
app/graphql/graphql_rails_schema.rb:2:in `<class:GraphqlRailsSchema>'
app/graphql/graphql_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2019-05-31 12:28:25 +1000
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"graphql#execute"}
  Rendering /Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/graphiql-rails-1.7.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/graphiql-rails-1.7.0/app/views/graphiql/rails/editors/show.html.erb (7.7ms)
Completed 200 OK in 13ms (Views: 11.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2019-05-31 12:28:26 +1000
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 500 Internal Server Error in 6ms (ActiveRecord: 0.0ms)


  
SyntaxError (/Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/types/query_type.rb:20: syntax error, unexpected end, expecting end-of-input):
  
app/graphql/types/query_type.rb:20: syntax error, unexpected end, expecting end-of-input
app/graphql/graphql_rails_schema.rb:3:in `<class:GraphqlRailsSchema>'
app/graphql/graphql_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2019-05-31 12:28:27 +1000
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 3ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant Types::MutationType, expected /Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/types/mutation_type.rb to define it):
  
app/graphql/graphql_rails_schema.rb:2:in `<class:GraphqlRailsSchema>'
app/graphql/graphql_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2019-05-31 12:29:00 +1000
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"graphql#execute"}
  Rendering /Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/graphiql-rails-1.7.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/graphiql-rails-1.7.0/app/views/graphiql/rails/editors/show.html.erb (5.2ms)
Completed 200 OK in 10ms (Views: 8.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2019-05-31 12:29:01 +1000
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 500 Internal Server Error in 10ms (ActiveRecord: 0.0ms)


  
SyntaxError (/Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/types/query_type.rb:20: syntax error, unexpected end, expecting end-of-input):
  
app/graphql/types/query_type.rb:20: syntax error, unexpected end, expecting end-of-input
app/graphql/graphql_rails_schema.rb:3:in `<class:GraphqlRailsSchema>'
app/graphql/graphql_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2019-05-31 12:29:01 +1000
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant Types::MutationType, expected /Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/types/mutation_type.rb to define it):
  
app/graphql/graphql_rails_schema.rb:2:in `<class:GraphqlRailsSchema>'
app/graphql/graphql_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2019-05-31 12:29:09 +1000
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/activerecord-5.2.3/lib/active_record/log_subscriber.rb:98
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"graphql#execute"}
  Rendering /Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/graphiql-rails-1.7.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/graphiql-rails-1.7.0/app/views/graphiql/rails/editors/show.html.erb (314.7ms)
Completed 200 OK in 319ms (Views: 318.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2019-05-31 12:29:10 +1000
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 500 Internal Server Error in 7ms (ActiveRecord: 0.0ms)


  
SyntaxError (/Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/types/query_type.rb:20: syntax error, unexpected end, expecting end-of-input):
  
app/graphql/types/query_type.rb:20: syntax error, unexpected end, expecting end-of-input
app/graphql/graphql_rails_schema.rb:3:in `<class:GraphqlRailsSchema>'
app/graphql/graphql_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2019-05-31 12:29:10 +1000
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant Types::MutationType, expected /Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/types/mutation_type.rb to define it):
  
app/graphql/graphql_rails_schema.rb:2:in `<class:GraphqlRailsSchema>'
app/graphql/graphql_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2019-05-31 12:30:25 +1000
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"graphql#execute"}
  Rendering /Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/graphiql-rails-1.7.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/graphiql-rails-1.7.0/app/views/graphiql/rails/editors/show.html.erb (4.7ms)
Completed 200 OK in 9ms (Views: 7.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2019-05-31 12:30:26 +1000
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 500 Internal Server Error in 4ms (ActiveRecord: 0.0ms)


  
SyntaxError (/Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/types/query_type.rb:20: syntax error, unexpected end, expecting end-of-input):
  
app/graphql/types/query_type.rb:20: syntax error, unexpected end, expecting end-of-input
app/graphql/graphql_rails_schema.rb:3:in `<class:GraphqlRailsSchema>'
app/graphql/graphql_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2019-05-31 12:30:26 +1000
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant Types::MutationType, expected /Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/types/mutation_type.rb to define it):
  
app/graphql/graphql_rails_schema.rb:2:in `<class:GraphqlRailsSchema>'
app/graphql/graphql_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2019-05-31 12:31:02 +1000
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"graphql#execute"}
  Rendering /Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/graphiql-rails-1.7.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/graphiql-rails-1.7.0/app/views/graphiql/rails/editors/show.html.erb (3.7ms)
Completed 200 OK in 7ms (Views: 5.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2019-05-31 12:31:03 +1000
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 500 Internal Server Error in 15ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant Types::MutationType, expected /Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/types/mutation_type.rb to define it):
  
app/graphql/graphql_rails_schema.rb:2:in `<class:GraphqlRailsSchema>'
app/graphql/graphql_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2019-05-31 12:31:03 +1000
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant Types::MutationType, expected /Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/types/mutation_type.rb to define it):
  
app/graphql/graphql_rails_schema.rb:2:in `<class:GraphqlRailsSchema>'
app/graphql/graphql_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2019-05-31 12:31:06 +1000
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"graphql#execute"}
  Rendering /Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/graphiql-rails-1.7.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/graphiql-rails-1.7.0/app/views/graphiql/rails/editors/show.html.erb (8.4ms)
Completed 200 OK in 13ms (Views: 11.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2019-05-31 12:31:06 +1000
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant Types::MutationType, expected /Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/types/mutation_type.rb to define it):
  
app/graphql/graphql_rails_schema.rb:2:in `<class:GraphqlRailsSchema>'
app/graphql/graphql_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2019-05-31 12:31:06 +1000
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 3ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant Types::MutationType, expected /Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/types/mutation_type.rb to define it):
  
app/graphql/graphql_rails_schema.rb:2:in `<class:GraphqlRailsSchema>'
app/graphql/graphql_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2019-05-31 12:32:46 +1000
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"graphql#execute"}
  Rendering /Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/graphiql-rails-1.7.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/graphiql-rails-1.7.0/app/views/graphiql/rails/editors/show.html.erb (5.6ms)
Completed 200 OK in 10ms (Views: 8.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2019-05-31 12:32:47 +1000
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 200 OK in 111ms (Views: 13.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2019-05-31 12:33:19 +1000
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query{\n  users{\n    name\n    email\n    books\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query{\n  users{\n    name\n    email\n    books\n  }\n}", "variables"=>nil}}
Completed 200 OK in 2ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2019-05-31 12:33:25 +1000
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query{\n  users{\n    name\n    email\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query{\n  users{\n    name\n    email\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (1.1ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 26ms (Views: 0.2ms | ActiveRecord: 3.7ms)


Started POST "/graphql" for ::1 at 2019-05-31 12:33:42 +1000
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query{\n  users{\n    name\n    email\n    books{\n      title\n    }\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query{\n  users{\n    name\n    email\n    books{\n      title\n    }\n  }\n}", "variables"=>nil}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
  â†³ app/controllers/graphql_controller.rb:10
  [1m[36mBook Load (0.9ms)[0m  [1m[34mSELECT "books".* FROM "books" WHERE "books"."user_id" = ?[0m  [["user_id", 6]]
  â†³ app/controllers/graphql_controller.rb:10
  [1m[36mBook Load (0.2ms)[0m  [1m[34mSELECT "books".* FROM "books" WHERE "books"."user_id" = ?[0m  [["user_id", 7]]
  â†³ app/controllers/graphql_controller.rb:10
  [1m[36mBook Load (0.2ms)[0m  [1m[34mSELECT "books".* FROM "books" WHERE "books"."user_id" = ?[0m  [["user_id", 8]]
  â†³ app/controllers/graphql_controller.rb:10
  [1m[36mBook Load (0.2ms)[0m  [1m[34mSELECT "books".* FROM "books" WHERE "books"."user_id" = ?[0m  [["user_id", 9]]
  â†³ app/controllers/graphql_controller.rb:10
  [1m[36mBook Load (0.2ms)[0m  [1m[34mSELECT "books".* FROM "books" WHERE "books"."user_id" = ?[0m  [["user_id", 10]]
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 34ms (Views: 0.6ms | ActiveRecord: 3.1ms)


Started POST "/graphql" for ::1 at 2019-05-31 12:42:49 +1000
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query{\n  user {\n    id\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"query{\n  user {\n    id\n  }\n}", "variables"=>nil}}
Completed 500 Internal Server Error in 6ms (ActiveRecord: 0.0ms)


  
SyntaxError (/Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/mutations/create_user.rb:17: syntax error, unexpected ':', expecting end
            user: nil,
                ^
/Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/mutations/create_user.rb:17: Can't assign to nil
            user: nil,
                  ^~~
/Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/mutations/create_user.rb:22: syntax error, unexpected end-of-input, expecting end):
  
app/graphql/mutations/create_user.rb:17: syntax error, unexpected ':', expecting end
app/graphql/mutations/create_user.rb:17: Can't assign to nil
app/graphql/mutations/create_user.rb:22: syntax error, unexpected end-of-input, expecting end
app/graphql/types/mutation_type.rb:4:in `<class:MutationType>'
app/graphql/types/mutation_type.rb:2:in `<module:Types>'
app/graphql/types/mutation_type.rb:1:in `<main>'
app/graphql/graphql_rails_schema.rb:2:in `<class:GraphqlRailsSchema>'
app/graphql/graphql_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2019-05-31 12:43:28 +1000
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"graphql#execute"}
  Rendering /Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/graphiql-rails-1.7.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/graphiql-rails-1.7.0/app/views/graphiql/rails/editors/show.html.erb (7.5ms)
Completed 200 OK in 12ms (Views: 10.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2019-05-31 12:43:29 +1000
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 500 Internal Server Error in 10ms (ActiveRecord: 0.0ms)


  
SyntaxError (/Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/mutations/create_user.rb:17: syntax error, unexpected ':', expecting end
            user: nil,
                ^
/Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/mutations/create_user.rb:17: Can't assign to nil
            user: nil,
                  ^~~
/Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/mutations/create_user.rb:22: syntax error, unexpected end-of-input, expecting end):
  
app/graphql/mutations/create_user.rb:17: syntax error, unexpected ':', expecting end
app/graphql/mutations/create_user.rb:17: Can't assign to nil
app/graphql/mutations/create_user.rb:22: syntax error, unexpected end-of-input, expecting end
app/graphql/types/mutation_type.rb:4:in `<class:MutationType>'
app/graphql/types/mutation_type.rb:2:in `<module:Types>'
app/graphql/types/mutation_type.rb:1:in `<main>'
app/graphql/graphql_rails_schema.rb:2:in `<class:GraphqlRailsSchema>'
app/graphql/graphql_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2019-05-31 12:43:30 +1000
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 7ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant Types::BaseObject, expected /Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/types/base_object.rb to define it):
  
app/graphql/types/mutation_type.rb:2:in `<module:Types>'
app/graphql/types/mutation_type.rb:1:in `<main>'
app/graphql/graphql_rails_schema.rb:2:in `<class:GraphqlRailsSchema>'
app/graphql/graphql_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2019-05-31 12:44:22 +1000
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"graphql#execute"}
  Rendering /Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/graphiql-rails-1.7.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/graphiql-rails-1.7.0/app/views/graphiql/rails/editors/show.html.erb (4.6ms)
Completed 200 OK in 8ms (Views: 6.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2019-05-31 12:44:23 +1000
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 500 Internal Server Error in 10ms (ActiveRecord: 0.0ms)


  
SyntaxError (/Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/mutations/create_user.rb:16: else without rescue is useless
        else
        ^~~~
/Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/mutations/create_user.rb:17: syntax error, unexpected ':', expecting end
            user: nil,
                ^
/Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/mutations/create_user.rb:17: Can't assign to nil
            user: nil,
                  ^~~
/Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/mutations/create_user.rb:22: syntax error, unexpected end, expecting end-of-input):
  
app/graphql/mutations/create_user.rb:16: else without rescue is useless
app/graphql/mutations/create_user.rb:17: syntax error, unexpected ':', expecting end
app/graphql/mutations/create_user.rb:17: Can't assign to nil
app/graphql/mutations/create_user.rb:22: syntax error, unexpected end, expecting end-of-input
app/graphql/types/mutation_type.rb:3:in `<class:MutationType>'
app/graphql/types/mutation_type.rb:2:in `<module:Types>'
app/graphql/types/mutation_type.rb:1:in `<main>'
app/graphql/graphql_rails_schema.rb:2:in `<class:GraphqlRailsSchema>'
app/graphql/graphql_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2019-05-31 12:44:23 +1000
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 3ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant Types::BaseObject, expected /Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/types/base_object.rb to define it):
  
app/graphql/types/mutation_type.rb:2:in `<module:Types>'
app/graphql/types/mutation_type.rb:1:in `<main>'
app/graphql/graphql_rails_schema.rb:2:in `<class:GraphqlRailsSchema>'
app/graphql/graphql_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2019-05-31 12:45:35 +1000
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"graphql#execute"}
  Rendering /Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/graphiql-rails-1.7.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/graphiql-rails-1.7.0/app/views/graphiql/rails/editors/show.html.erb (4.2ms)
Completed 200 OK in 7ms (Views: 6.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2019-05-31 12:45:36 +1000
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 500 Internal Server Error in 6ms (ActiveRecord: 0.0ms)


  
SyntaxError (/Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/mutations/create_user.rb:17: syntax error, unexpected ':', expecting end
            user: nil,
                ^
/Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/mutations/create_user.rb:17: Can't assign to nil
            user: nil,
                  ^~~
/Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/mutations/create_user.rb:22: syntax error, unexpected end-of-input, expecting end):
  
app/graphql/mutations/create_user.rb:17: syntax error, unexpected ':', expecting end
app/graphql/mutations/create_user.rb:17: Can't assign to nil
app/graphql/mutations/create_user.rb:22: syntax error, unexpected end-of-input, expecting end
app/graphql/types/mutation_type.rb:3:in `<class:MutationType>'
app/graphql/types/mutation_type.rb:2:in `<module:Types>'
app/graphql/types/mutation_type.rb:1:in `<main>'
app/graphql/graphql_rails_schema.rb:2:in `<class:GraphqlRailsSchema>'
app/graphql/graphql_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2019-05-31 12:45:37 +1000
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 18ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant Types::BaseObject, expected /Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/types/base_object.rb to define it):
  
app/graphql/types/mutation_type.rb:2:in `<module:Types>'
app/graphql/types/mutation_type.rb:1:in `<main>'
app/graphql/graphql_rails_schema.rb:2:in `<class:GraphqlRailsSchema>'
app/graphql/graphql_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2019-05-31 12:45:43 +1000
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"graphql#execute"}
  Rendering /Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/graphiql-rails-1.7.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/jamesaspinall/.rvm/gems/ruby-2.6.2/gems/graphiql-rails-1.7.0/app/views/graphiql/rails/editors/show.html.erb (5.0ms)
Completed 200 OK in 11ms (Views: 8.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2019-05-31 12:45:43 +1000
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "}}
Completed 500 Internal Server Error in 6ms (ActiveRecord: 0.0ms)


  
SyntaxError (/Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/mutations/create_user.rb:17: syntax error, unexpected ':', expecting end
            user: nil,
                ^
/Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/mutations/create_user.rb:17: Can't assign to nil
            user: nil,
                  ^~~
/Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/mutations/create_user.rb:22: syntax error, unexpected end-of-input, expecting end):
  
app/graphql/mutations/create_user.rb:17: syntax error, unexpected ':', expecting end
app/graphql/mutations/create_user.rb:17: Can't assign to nil
app/graphql/mutations/create_user.rb:22: syntax error, unexpected end-of-input, expecting end
app/graphql/types/mutation_type.rb:3:in `<class:MutationType>'
app/graphql/types/mutation_type.rb:2:in `<module:Types>'
app/graphql/types/mutation_type.rb:1:in `<main>'
app/graphql/graphql_rails_schema.rb:2:in `<class:GraphqlRailsSchema>'
app/graphql/graphql_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2019-05-31 12:45:43 +1000
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
LoadError (Unable to autoload constant Types::BaseObject, expected /Users/jamesaspinall/Projects/sei-classwork/16_Gatsby/graphql_starter/graphql-rails/app/graphql/types/base_object.rb to define it):
  
app/graphql/types/mutation_type.rb:2:in `<module:Types>'
app/graphql/types/mutation_type.rb:1:in `<main>'
app/graphql/graphql_rails_schema.rb:2:in `<class:GraphqlRailsSchema>'
app/graphql/graphql_rails_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
